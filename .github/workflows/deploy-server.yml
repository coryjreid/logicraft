name: Deploy Game Server

on: 
  workflow_dispatch:
    inputs:
      skip-tests:
        description: "Skip packwiz tests"
        default: false
        required: true
        type: boolean
      skip-web-server-deploy:
        description: "Skip web server deployment"
        default: false
        required: true
        type: boolean
  release:
    types: [published]

jobs:
  validate-pack-before-deploy:
    if: inputs.skip-tests == false
    uses: ./.github/workflows/packwiz-pack-test.yml
  deploy-web-server:
    if: inputs.skip-web-server-deploy == false
    uses: ./.github/workflows/deploy-web-server.yml
    secrets: inherit
    needs: validate-pack-before-deploy
  deploy-game-server:
    runs-on: ubuntu-latest
    needs: [validate-pack-before-deploy, deploy-web-server]
    if: always()
    timeout-minutes: 10
    steps:
      # Validate
      - name: Check for faliures
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
      # Setup
      - name: Checkout Repository
        uses: actions/checkout@v4.0.0
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.GAME_SERVER_SSH_KEY }}
          known_hosts: "just-a-placeholder-so-we-dont-get-errors"
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.GAME_SERVER_IP }} >> ~/.ssh/known_hosts
      # Deploy
        # Shutdown
      - name: "Shutdown: Copy script to server"
        run: scp ./build/game-server-scripts/shutdown.sh ${{ secrets.SSH_USERNAME }}@${{ secrets.GAME_SERVER_IP }}:/tmp/shutdown.sh
      - name: "Shutdown: Make script executable"
        run: ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.GAME_SERVER_IP }} "chmod +x /tmp/shutdown.sh"
      - name: "Shutdown: Execute script"
        uses: appleboy/ssh-action@master
        env:
          MINECRAFT_DOCKER_CONTAINER_NAME: ${{ secrets.GAME_SERVER_DOCKER_CONTAINER_NAME }}
          MINECRAFT_COMPOSE_DIRECTORY: ${{ secrets.GAME_SERVER_COMPOSE_DIRECTORY }}
        with:
          host: ${{ secrets.GAME_SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.GAME_SERVER_SSH_KEY }}
          port: 22
          script_stop: true
          envs: MINECRAFT_DOCKER_CONTAINER_NAME,MINECRAFT_COMPOSE_DIRECTORY
          script: /tmp/shutdown.sh
      - name: "Shutdown: Cleanup"
        run: ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.GAME_SERVER_IP }} "rm -f /tmp/shutdown.sh"
        # Prepare for deployment
      - name: "Deployment: Copy default configs"
        run: scp -r ./defaultconfigs ${{ secrets.GAME_SERVER_MINECRAFT_USERNAME }}@${{ secrets.GAME_SERVER_IP }}:${{ secrets.GAME_SERVER_COMPOSE_DIRECTORY }}/server/defaultconfigs
      - name: "Deployment: Copy script to server"
        run: scp ./build/game-server-scripts/prepare-for-deployment.sh ${{ secrets.GAME_SERVER_MINECRAFT_USERNAME }}@${{ secrets.GAME_SERVER_IP }}:/tmp/prepare-for-deployment.sh
      - name: "Deployment: Make script executable"
        run: ssh ${{ secrets.GAME_SERVER_MINECRAFT_USERNAME }}@${{ secrets.GAME_SERVER_IP }} "chmod +x /tmp/prepare-for-deployment.sh"
      - name: "Shutdown: Execute script"
        uses: appleboy/ssh-action@master
        env:
          MINECRAFT_COMPOSE_DIRECTORY: ${{ secrets.GAME_SERVER_COMPOSE_DIRECTORY }}
        with:
          host: ${{ secrets.GAME_SERVER_IP }}
          username: ${{ secrets.GAME_SERVER_MINECRAFT_USERNAME }}
          key: ${{ secrets.GAME_SERVER_SSH_KEY }}
          port: 22
          script_stop: true
          envs: MINECRAFT_COMPOSE_DIRECTORY
          script: /tmp/prepare-for-deployment.sh
      - name: "Deployment: Cleanup"
        run: ssh ${{ secrets.GAME_SERVER_MINECRAFT_USERNAME }}@${{ secrets.GAME_SERVER_IP }} "rm -f /tmp/prepare-for-deployment.sh"
        # Startup
      - name: "Startup: Execute command"
        uses: appleboy/ssh-action@master
        env:
          MINECRAFT_COMPOSE_DIRECTORY: ${{ secrets.GAME_SERVER_COMPOSE_DIRECTORY }}
        with:
          host: ${{ secrets.GAME_SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.GAME_SERVER_SSH_KEY }}
          port: 22
          script_stop: true
          envs: MINECRAFT_COMPOSE_DIRECTORY
          script: |
            echo "Start server"
            cd $MINECRAFT_COMPOSE_DIRECTORY && docker compose up -d
